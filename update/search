import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class UpdateProduct extends JFrame {
    JTextField idField, nameField, priceField, categoryField;
    JButton searchBtn, updateBtn;

    public UpdateProduct() {
        setTitle("Update Product");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridLayout(6, 2));
        setLocationRelativeTo(null);

        // UI components
        add(new JLabel("Enter Product ID to Update:"));
        idField = new JTextField();
        add(idField);

        searchBtn = new JButton("Search");
        add(searchBtn);
        add(new JLabel("")); // filler

        add(new JLabel("Product Name:"));
        nameField = new JTextField();
        add(nameField);

        add(new JLabel("Price:"));
        priceField = new JTextField();
        add(priceField);

        add(new JLabel("Category:"));
        categoryField = new JTextField();
        add(categoryField);

        updateBtn = new JButton("Update");
        add(updateBtn);
        add(new JLabel("")); // filler

        // Disable fields initially
        nameField.setEnabled(false);
        priceField.setEnabled(false);
        categoryField.setEnabled(false);
        updateBtn.setEnabled(false);

        // Search button action
        searchBtn.addActionListener(e -> {
            String pid = idField.getText();
            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/shop", "root", "");
                String sql = "SELECT * FROM products WHERE id=?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(pid));
                ResultSet rs = pst.executeQuery();

                if (rs.next()) {
                    nameField.setText(rs.getString("name"));
                    priceField.setText(rs.getString("price"));
                    categoryField.setText(rs.getString("category"));

                    // Enable fields for editing
                    nameField.setEnabled(true);
                    priceField.setEnabled(true);
                    categoryField.setEnabled(true);
                    updateBtn.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Product not found.");
                }
                con.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        });

        // Update button action
        updateBtn.addActionListener(e -> {
            String pid = idField.getText();
            String name = nameField.getText();
            String price = priceField.getText();
            String category = categoryField.getText();

            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/loginapp", "root", "");
                String sql = "UPDATE products SET name=?, price=?, category=? WHERE id=?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, name);
                pst.setDouble(2, Double.parseDouble(price));
                pst.setString(3, category);
                pst.setInt(4, Integer.parseInt(pid));

                int rows = pst.executeUpdate();
                if (rows > 0) {
                    JOptionPane.showMessageDialog(this, "Product updated successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Update failed.");
                }
                con.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        });

        setVisible(true);
    }

    public static void main(String[] args) {
        new UpdateProduct();
    }
}

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class SearchProduct extends JFrame {
    JTextField searchField;
    JButton searchButton;
    JTable resultTable;
    DefaultTableModel tableModel;

    public SearchProduct() {
        setTitle("Search Product");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // Top panel for input
        JPanel topPanel = new JPanel();
        topPanel.add(new JLabel("Search Product (by Name/Category):"));
        searchField = new JTextField(20);
        topPanel.add(searchField);
        searchButton = new JButton("Search");
        topPanel.add(searchButton);
        add(topPanel, BorderLayout.NORTH);

        // Table for results
        tableModel = new DefaultTableModel();
        resultTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(resultTable);
        add(scrollPane, BorderLayout.CENTER);

        // Table column names
        tableModel.addColumn("ID");
        tableModel.addColumn("Name");
        tableModel.addColumn("Price");
        tableModel.addColumn("Category");

        // Search button action
        searchButton.addActionListener(e -> {
            String keyword = searchField.getText();
            tableModel.setRowCount(0);
            try {
              Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/loginapp", "root", "");
                String sql = "SELECT * FROM products WHERE name LIKE ? OR category LIKE ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, "%" + keyword + "%");
                pst.setString(2, "%" + keyword + "%");
                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    int id = rs.getInt("id");
                    String name = rs.getString("name");
                    double price = rs.getDouble("price");
                    String category = rs.getString("category");
                    tableModel.addRow(new Object[]{id, name, price, category});
                }
                con.close();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
            }
        });

        setVisible(true);
    }

    public static void main(String[] args) {
        new SearchProduct();
    }
}


import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class UpdateBuyer extends JFrame {

    // Components
    private JLabel lblTitle, lblID, lblName, lblEmail, lblPhone, lblAddress;
    private JTextField txtID, txtName, txtEmail, txtPhone, txtAddress;
    private JButton btnSearch, btnUpdate, btnClear;

    public UpdateBuyer() {
        setTitle("Update Buyer Details");
        setSize(500, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);
        getContentPane().setBackground(new Color(255, 248, 220)); // light warm background

        // Title
        lblTitle = new JLabel("Update Buyer Details");
        lblTitle.setFont(new Font("Segoe UI", Font.BOLD, 22));
        lblTitle.setForeground(new Color(139, 69, 19)); // SaddleBrown
        lblTitle.setBounds(130, 10, 300, 30);
        add(lblTitle);

        // Labels and TextFields
        lblID = new JLabel("Buyer ID:");
        lblID.setBounds(50, 60, 100, 25);
        add(lblID);
        txtID = new JTextField();
        txtID.setBounds(150, 60, 200, 25);
        add(txtID);

        btnSearch = new JButton("Search");
        btnSearch.setBounds(360, 60, 90, 25);
        add(btnSearch);

        lblName = new JLabel("Name:");
        lblName.setBounds(50, 100, 100, 25);
        add(lblName);
        txtName = new JTextField();
        txtName.setBounds(150, 100, 200, 25);
        add(txtName);

        lblEmail = new JLabel("Email:");
        lblEmail.setBounds(50, 140, 100, 25);
        add(lblEmail);
        txtEmail = new JTextField();
        txtEmail.setBounds(150, 140, 200, 25);
        add(txtEmail);

        lblPhone = new JLabel("Phone:");
        lblPhone.setBounds(50, 180, 100, 25);
        add(lblPhone);
        txtPhone = new JTextField();
        txtPhone.setBounds(150, 180, 200, 25);
        add(txtPhone);

        lblAddress = new JLabel("Address:");
        lblAddress.setBounds(50, 220, 100, 25);
        add(lblAddress);
        txtAddress = new JTextField();
        txtAddress.setBounds(150, 220, 200, 25);
        add(txtAddress);

        // Buttons
        btnUpdate = new JButton("Update");
        btnUpdate.setBounds(100, 280, 100, 30);
        btnUpdate.setBackground(new Color(60, 179, 113));
        btnUpdate.setForeground(Color.WHITE);
        add(btnUpdate);

        btnClear = new JButton("Clear");
        btnClear.setBounds(220, 280, 100, 30);
        btnClear.setBackground(new Color(205, 92, 92));
        btnClear.setForeground(Color.WHITE);
        add(btnClear);

        setVisible(true);

        // --- Button Functionality ---

        // SEARCH Buyer by ID
        btnSearch.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String id = txtID.getText().trim();
                if (id.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Enter Buyer ID to search.");
                    return;
                }
                try {
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/shop", "root", "");
                    PreparedStatement ps = con.prepareStatement("SELECT * FROM buyer WHERE id = ?");
                    ps.setString(1, id);
                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        txtName.setText(rs.getString("name"));
                        txtEmail.setText(rs.getString("email"));
                        txtPhone.setText(rs.getString("phone"));
                        txtAddress.setText(rs.getString("address"));
                    } else {
                        JOptionPane.showMessageDialog(null, "Buyer not found!");
                    }
                    con.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
                    System.out.println("Error: " + ex.getMessage());
                }
            }
        });

        // UPDATE Buyer Info
        btnUpdate.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String id = txtID.getText().trim();
                String name = txtName.getText().trim();
                String email = txtEmail.getText().trim();
                String phone = txtPhone.getText().trim();
                String address = txtAddress.getText().trim();

                if (id.isEmpty() || name.isEmpty() || email.isEmpty() || phone.isEmpty() || address.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please fill all fields before updating.");
                    return;
                }

                try {
                   Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/loginapp", "root", "");
                    PreparedStatement ps = con.prepareStatement("UPDATE buyer SET name=?, email=?, phone=?, address=? WHERE id=?");
                    ps.setString(1, name);
                    ps.setString(2, email);
                    ps.setString(3, phone);
                    ps.setString(4, address);
                    ps.setString(5, id);

                    int rowsUpdated = ps.executeUpdate();
                    if (rowsUpdated > 0) {
                        JOptionPane.showMessageDialog(null, "Buyer updated successfully!");
                    } else {
                        JOptionPane.showMessageDialog(null, "Update failed! ID not found.");
                    }
                    con.close();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
                    System.out.println("Error: " + ex.getMessage());
                }
            }
        });

        // CLEAR form
        btnClear.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                txtID.setText("");
                txtName.setText("");
                txtEmail.setText("");
                txtPhone.setText("");
                txtAddress.setText("");
            }
        });
    }

    public static void main(String[] args) {
        new UpdateBuyer();
    }
}


import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

public class SearchBuyer extends JFrame {
    JTextField searchField;
    JButton searchButton;
    JTable resultTable;
    DefaultTableModel tableModel;

    public SearchBuyer() {
        setTitle("Search Buyer");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // Top panel for search input
        JPanel topPanel = new JPanel();
        topPanel.add(new JLabel("Enter Buyer Name or ID:"));
        searchField = new JTextField(20);
        topPanel.add(searchField);
        searchButton = new JButton("Search");
        topPanel.add(searchButton);

        add(topPanel, BorderLayout.NORTH);

        // Table to show results
        tableModel = new DefaultTableModel();
        resultTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(resultTable);
        add(scrollPane, BorderLayout.CENTER);

        // Table column names
        tableModel.addColumn("ID");
        tableModel.addColumn("Name");
        tableModel.addColumn("Email");
        tableModel.addColumn("Location");

        // Button action
        searchButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String keyword = searchField.getText();
                searchBuyer(keyword);
            }
        });

        setVisible(true);
    }

    private void searchBuyer(String keyword) {
        // Clear table
        tableModel.setRowCount(0);
        try {
            // Connect to DB (your DB name is loginapp)
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/loginapp", "root", "");
            String sql = "SELECT * FROM buyers WHERE id LIKE ? OR name LIKE ?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, "%" + keyword + "%");
            pst.setString(2, "%" + keyword + "%");
            ResultSet rs = pst.executeQuery();

            // Fill table
            while (rs.next()) {
                int id = rs.getInt("id");
                String name = rs.getString("name");
                String email = rs.getString("email");
                String location = rs.getString("location");
                tableModel.addRow(new Object[]{id, name, email, location});
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error searching buyers: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new SearchBuyer());
    }
}
